use std::str::FromStr;

use crate::ast::{Expr, Opcode};

grammar;

pub Expr: Box<Expr> = {
    Num => Box::new(Expr::Number(<>)),
    "(" <Expr> ")",
    Expr ExprOp Expr => Box::new(Expr::BinOp(<>)),
    "if" Expr "then" Expr "else" Expr => Box::new(Expr::If(<>)),
};

ExprOp: Opcode = {
    "+" => Opcode::Add,
    "-" => Opcode::Sub,
    "*" => Opcode::Mul,
    "/" => Opcode::Div,
};

Num: i32 = {
    r"[0-9]+" => i32::from_str(<>).unwrap()
};