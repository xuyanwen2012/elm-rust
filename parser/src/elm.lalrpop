use std::str::FromStr;

use crate::ast::{Expr, Opcode};

grammar;

pub Expr: Box<Expr> = {
    "if" <SimpExpr> "then" <Expr> "else" <Expr> => Box::new(Expr::If(<>)),
    SimpExpr,
};

SimpExpr: Box<Expr> = {
    SimpExpr ExprOp Term => Box::new(Expr::BinOp(<>)),
    Term,
};

Term: Box<Expr> = {
    Num => Box::new(Expr::Number(<>)), // Literals
    "(" <Expr> ")",
};

ExprOp: Opcode = {
    "+" => Opcode::Add,
    "-" => Opcode::Sub,
//    "*" => Opcode::Mul,
//    "/" => Opcode::Div,
};

Num: i32 = {
    r"[0-9]+" => i32::from_str(<>).unwrap()
};